/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package co.tagtalk.winemate.thriftfiles;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2017-02-24")
public class MyProfile implements org.apache.thrift.TBase<MyProfile, MyProfile._Fields>, java.io.Serializable, Cloneable, Comparable<MyProfile> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("MyProfile");

  private static final org.apache.thrift.protocol.TField USER_FIELD_DESC = new org.apache.thrift.protocol.TField("user", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField FOLLOWER_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("followerNumber", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField FOLLOWING_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("followingNumber", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField RATED_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("ratedNumber", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField IS_FOLLOWING_FIELD_DESC = new org.apache.thrift.protocol.TField("isFollowing", org.apache.thrift.protocol.TType.BOOL, (short)5);
  private static final org.apache.thrift.protocol.TField IS_FOLLOWED_FIELD_DESC = new org.apache.thrift.protocol.TField("isFollowed", org.apache.thrift.protocol.TType.BOOL, (short)6);
  private static final org.apache.thrift.protocol.TField HIDE_PROFILE_TO_STRANGER_FIELD_DESC = new org.apache.thrift.protocol.TField("hideProfileToStranger", org.apache.thrift.protocol.TType.BOOL, (short)7);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new MyProfileStandardSchemeFactory());
    schemes.put(TupleScheme.class, new MyProfileTupleSchemeFactory());
  }

  public User user; // required
  public int followerNumber; // required
  public int followingNumber; // required
  public int ratedNumber; // required
  public boolean isFollowing; // required
  public boolean isFollowed; // required
  public boolean hideProfileToStranger; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    USER((short)1, "user"),
    FOLLOWER_NUMBER((short)2, "followerNumber"),
    FOLLOWING_NUMBER((short)3, "followingNumber"),
    RATED_NUMBER((short)4, "ratedNumber"),
    IS_FOLLOWING((short)5, "isFollowing"),
    IS_FOLLOWED((short)6, "isFollowed"),
    HIDE_PROFILE_TO_STRANGER((short)7, "hideProfileToStranger");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // USER
          return USER;
        case 2: // FOLLOWER_NUMBER
          return FOLLOWER_NUMBER;
        case 3: // FOLLOWING_NUMBER
          return FOLLOWING_NUMBER;
        case 4: // RATED_NUMBER
          return RATED_NUMBER;
        case 5: // IS_FOLLOWING
          return IS_FOLLOWING;
        case 6: // IS_FOLLOWED
          return IS_FOLLOWED;
        case 7: // HIDE_PROFILE_TO_STRANGER
          return HIDE_PROFILE_TO_STRANGER;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __FOLLOWERNUMBER_ISSET_ID = 0;
  private static final int __FOLLOWINGNUMBER_ISSET_ID = 1;
  private static final int __RATEDNUMBER_ISSET_ID = 2;
  private static final int __ISFOLLOWING_ISSET_ID = 3;
  private static final int __ISFOLLOWED_ISSET_ID = 4;
  private static final int __HIDEPROFILETOSTRANGER_ISSET_ID = 5;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.USER, new org.apache.thrift.meta_data.FieldMetaData("user", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, User.class)));
    tmpMap.put(_Fields.FOLLOWER_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("followerNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.FOLLOWING_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("followingNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.RATED_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("ratedNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.IS_FOLLOWING, new org.apache.thrift.meta_data.FieldMetaData("isFollowing", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.IS_FOLLOWED, new org.apache.thrift.meta_data.FieldMetaData("isFollowed", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.HIDE_PROFILE_TO_STRANGER, new org.apache.thrift.meta_data.FieldMetaData("hideProfileToStranger", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(MyProfile.class, metaDataMap);
  }

  public MyProfile() {
  }

  public MyProfile(
    User user,
    int followerNumber,
    int followingNumber,
    int ratedNumber,
    boolean isFollowing,
    boolean isFollowed,
    boolean hideProfileToStranger)
  {
    this();
    this.user = user;
    this.followerNumber = followerNumber;
    setFollowerNumberIsSet(true);
    this.followingNumber = followingNumber;
    setFollowingNumberIsSet(true);
    this.ratedNumber = ratedNumber;
    setRatedNumberIsSet(true);
    this.isFollowing = isFollowing;
    setIsFollowingIsSet(true);
    this.isFollowed = isFollowed;
    setIsFollowedIsSet(true);
    this.hideProfileToStranger = hideProfileToStranger;
    setHideProfileToStrangerIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public MyProfile(MyProfile other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetUser()) {
      this.user = new User(other.user);
    }
    this.followerNumber = other.followerNumber;
    this.followingNumber = other.followingNumber;
    this.ratedNumber = other.ratedNumber;
    this.isFollowing = other.isFollowing;
    this.isFollowed = other.isFollowed;
    this.hideProfileToStranger = other.hideProfileToStranger;
  }

  public MyProfile deepCopy() {
    return new MyProfile(this);
  }

  @Override
  public void clear() {
    this.user = null;
    setFollowerNumberIsSet(false);
    this.followerNumber = 0;
    setFollowingNumberIsSet(false);
    this.followingNumber = 0;
    setRatedNumberIsSet(false);
    this.ratedNumber = 0;
    setIsFollowingIsSet(false);
    this.isFollowing = false;
    setIsFollowedIsSet(false);
    this.isFollowed = false;
    setHideProfileToStrangerIsSet(false);
    this.hideProfileToStranger = false;
  }

  public User getUser() {
    return this.user;
  }

  public MyProfile setUser(User user) {
    this.user = user;
    return this;
  }

  public void unsetUser() {
    this.user = null;
  }

  /** Returns true if field user is set (has been assigned a value) and false otherwise */
  public boolean isSetUser() {
    return this.user != null;
  }

  public void setUserIsSet(boolean value) {
    if (!value) {
      this.user = null;
    }
  }

  public int getFollowerNumber() {
    return this.followerNumber;
  }

  public MyProfile setFollowerNumber(int followerNumber) {
    this.followerNumber = followerNumber;
    setFollowerNumberIsSet(true);
    return this;
  }

  public void unsetFollowerNumber() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __FOLLOWERNUMBER_ISSET_ID);
  }

  /** Returns true if field followerNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetFollowerNumber() {
    return EncodingUtils.testBit(__isset_bitfield, __FOLLOWERNUMBER_ISSET_ID);
  }

  public void setFollowerNumberIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __FOLLOWERNUMBER_ISSET_ID, value);
  }

  public int getFollowingNumber() {
    return this.followingNumber;
  }

  public MyProfile setFollowingNumber(int followingNumber) {
    this.followingNumber = followingNumber;
    setFollowingNumberIsSet(true);
    return this;
  }

  public void unsetFollowingNumber() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __FOLLOWINGNUMBER_ISSET_ID);
  }

  /** Returns true if field followingNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetFollowingNumber() {
    return EncodingUtils.testBit(__isset_bitfield, __FOLLOWINGNUMBER_ISSET_ID);
  }

  public void setFollowingNumberIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __FOLLOWINGNUMBER_ISSET_ID, value);
  }

  public int getRatedNumber() {
    return this.ratedNumber;
  }

  public MyProfile setRatedNumber(int ratedNumber) {
    this.ratedNumber = ratedNumber;
    setRatedNumberIsSet(true);
    return this;
  }

  public void unsetRatedNumber() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RATEDNUMBER_ISSET_ID);
  }

  /** Returns true if field ratedNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetRatedNumber() {
    return EncodingUtils.testBit(__isset_bitfield, __RATEDNUMBER_ISSET_ID);
  }

  public void setRatedNumberIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RATEDNUMBER_ISSET_ID, value);
  }

  public boolean isIsFollowing() {
    return this.isFollowing;
  }

  public MyProfile setIsFollowing(boolean isFollowing) {
    this.isFollowing = isFollowing;
    setIsFollowingIsSet(true);
    return this;
  }

  public void unsetIsFollowing() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISFOLLOWING_ISSET_ID);
  }

  /** Returns true if field isFollowing is set (has been assigned a value) and false otherwise */
  public boolean isSetIsFollowing() {
    return EncodingUtils.testBit(__isset_bitfield, __ISFOLLOWING_ISSET_ID);
  }

  public void setIsFollowingIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISFOLLOWING_ISSET_ID, value);
  }

  public boolean isIsFollowed() {
    return this.isFollowed;
  }

  public MyProfile setIsFollowed(boolean isFollowed) {
    this.isFollowed = isFollowed;
    setIsFollowedIsSet(true);
    return this;
  }

  public void unsetIsFollowed() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISFOLLOWED_ISSET_ID);
  }

  /** Returns true if field isFollowed is set (has been assigned a value) and false otherwise */
  public boolean isSetIsFollowed() {
    return EncodingUtils.testBit(__isset_bitfield, __ISFOLLOWED_ISSET_ID);
  }

  public void setIsFollowedIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISFOLLOWED_ISSET_ID, value);
  }

  public boolean isHideProfileToStranger() {
    return this.hideProfileToStranger;
  }

  public MyProfile setHideProfileToStranger(boolean hideProfileToStranger) {
    this.hideProfileToStranger = hideProfileToStranger;
    setHideProfileToStrangerIsSet(true);
    return this;
  }

  public void unsetHideProfileToStranger() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __HIDEPROFILETOSTRANGER_ISSET_ID);
  }

  /** Returns true if field hideProfileToStranger is set (has been assigned a value) and false otherwise */
  public boolean isSetHideProfileToStranger() {
    return EncodingUtils.testBit(__isset_bitfield, __HIDEPROFILETOSTRANGER_ISSET_ID);
  }

  public void setHideProfileToStrangerIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __HIDEPROFILETOSTRANGER_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case USER:
      if (value == null) {
        unsetUser();
      } else {
        setUser((User)value);
      }
      break;

    case FOLLOWER_NUMBER:
      if (value == null) {
        unsetFollowerNumber();
      } else {
        setFollowerNumber((Integer)value);
      }
      break;

    case FOLLOWING_NUMBER:
      if (value == null) {
        unsetFollowingNumber();
      } else {
        setFollowingNumber((Integer)value);
      }
      break;

    case RATED_NUMBER:
      if (value == null) {
        unsetRatedNumber();
      } else {
        setRatedNumber((Integer)value);
      }
      break;

    case IS_FOLLOWING:
      if (value == null) {
        unsetIsFollowing();
      } else {
        setIsFollowing((Boolean)value);
      }
      break;

    case IS_FOLLOWED:
      if (value == null) {
        unsetIsFollowed();
      } else {
        setIsFollowed((Boolean)value);
      }
      break;

    case HIDE_PROFILE_TO_STRANGER:
      if (value == null) {
        unsetHideProfileToStranger();
      } else {
        setHideProfileToStranger((Boolean)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case USER:
      return getUser();

    case FOLLOWER_NUMBER:
      return getFollowerNumber();

    case FOLLOWING_NUMBER:
      return getFollowingNumber();

    case RATED_NUMBER:
      return getRatedNumber();

    case IS_FOLLOWING:
      return isIsFollowing();

    case IS_FOLLOWED:
      return isIsFollowed();

    case HIDE_PROFILE_TO_STRANGER:
      return isHideProfileToStranger();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case USER:
      return isSetUser();
    case FOLLOWER_NUMBER:
      return isSetFollowerNumber();
    case FOLLOWING_NUMBER:
      return isSetFollowingNumber();
    case RATED_NUMBER:
      return isSetRatedNumber();
    case IS_FOLLOWING:
      return isSetIsFollowing();
    case IS_FOLLOWED:
      return isSetIsFollowed();
    case HIDE_PROFILE_TO_STRANGER:
      return isSetHideProfileToStranger();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof MyProfile)
      return this.equals((MyProfile)that);
    return false;
  }

  public boolean equals(MyProfile that) {
    if (that == null)
      return false;

    boolean this_present_user = true && this.isSetUser();
    boolean that_present_user = true && that.isSetUser();
    if (this_present_user || that_present_user) {
      if (!(this_present_user && that_present_user))
        return false;
      if (!this.user.equals(that.user))
        return false;
    }

    boolean this_present_followerNumber = true;
    boolean that_present_followerNumber = true;
    if (this_present_followerNumber || that_present_followerNumber) {
      if (!(this_present_followerNumber && that_present_followerNumber))
        return false;
      if (this.followerNumber != that.followerNumber)
        return false;
    }

    boolean this_present_followingNumber = true;
    boolean that_present_followingNumber = true;
    if (this_present_followingNumber || that_present_followingNumber) {
      if (!(this_present_followingNumber && that_present_followingNumber))
        return false;
      if (this.followingNumber != that.followingNumber)
        return false;
    }

    boolean this_present_ratedNumber = true;
    boolean that_present_ratedNumber = true;
    if (this_present_ratedNumber || that_present_ratedNumber) {
      if (!(this_present_ratedNumber && that_present_ratedNumber))
        return false;
      if (this.ratedNumber != that.ratedNumber)
        return false;
    }

    boolean this_present_isFollowing = true;
    boolean that_present_isFollowing = true;
    if (this_present_isFollowing || that_present_isFollowing) {
      if (!(this_present_isFollowing && that_present_isFollowing))
        return false;
      if (this.isFollowing != that.isFollowing)
        return false;
    }

    boolean this_present_isFollowed = true;
    boolean that_present_isFollowed = true;
    if (this_present_isFollowed || that_present_isFollowed) {
      if (!(this_present_isFollowed && that_present_isFollowed))
        return false;
      if (this.isFollowed != that.isFollowed)
        return false;
    }

    boolean this_present_hideProfileToStranger = true;
    boolean that_present_hideProfileToStranger = true;
    if (this_present_hideProfileToStranger || that_present_hideProfileToStranger) {
      if (!(this_present_hideProfileToStranger && that_present_hideProfileToStranger))
        return false;
      if (this.hideProfileToStranger != that.hideProfileToStranger)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_user = true && (isSetUser());
    list.add(present_user);
    if (present_user)
      list.add(user);

    boolean present_followerNumber = true;
    list.add(present_followerNumber);
    if (present_followerNumber)
      list.add(followerNumber);

    boolean present_followingNumber = true;
    list.add(present_followingNumber);
    if (present_followingNumber)
      list.add(followingNumber);

    boolean present_ratedNumber = true;
    list.add(present_ratedNumber);
    if (present_ratedNumber)
      list.add(ratedNumber);

    boolean present_isFollowing = true;
    list.add(present_isFollowing);
    if (present_isFollowing)
      list.add(isFollowing);

    boolean present_isFollowed = true;
    list.add(present_isFollowed);
    if (present_isFollowed)
      list.add(isFollowed);

    boolean present_hideProfileToStranger = true;
    list.add(present_hideProfileToStranger);
    if (present_hideProfileToStranger)
      list.add(hideProfileToStranger);

    return list.hashCode();
  }

  @Override
  public int compareTo(MyProfile other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetUser()).compareTo(other.isSetUser());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUser()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.user, other.user);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFollowerNumber()).compareTo(other.isSetFollowerNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFollowerNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.followerNumber, other.followerNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFollowingNumber()).compareTo(other.isSetFollowingNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFollowingNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.followingNumber, other.followingNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRatedNumber()).compareTo(other.isSetRatedNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRatedNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ratedNumber, other.ratedNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsFollowing()).compareTo(other.isSetIsFollowing());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsFollowing()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isFollowing, other.isFollowing);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsFollowed()).compareTo(other.isSetIsFollowed());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsFollowed()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isFollowed, other.isFollowed);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHideProfileToStranger()).compareTo(other.isSetHideProfileToStranger());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHideProfileToStranger()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hideProfileToStranger, other.hideProfileToStranger);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("MyProfile(");
    boolean first = true;

    sb.append("user:");
    if (this.user == null) {
      sb.append("null");
    } else {
      sb.append(this.user);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("followerNumber:");
    sb.append(this.followerNumber);
    first = false;
    if (!first) sb.append(", ");
    sb.append("followingNumber:");
    sb.append(this.followingNumber);
    first = false;
    if (!first) sb.append(", ");
    sb.append("ratedNumber:");
    sb.append(this.ratedNumber);
    first = false;
    if (!first) sb.append(", ");
    sb.append("isFollowing:");
    sb.append(this.isFollowing);
    first = false;
    if (!first) sb.append(", ");
    sb.append("isFollowed:");
    sb.append(this.isFollowed);
    first = false;
    if (!first) sb.append(", ");
    sb.append("hideProfileToStranger:");
    sb.append(this.hideProfileToStranger);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (user != null) {
      user.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class MyProfileStandardSchemeFactory implements SchemeFactory {
    public MyProfileStandardScheme getScheme() {
      return new MyProfileStandardScheme();
    }
  }

  private static class MyProfileStandardScheme extends StandardScheme<MyProfile> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, MyProfile struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // USER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.user = new User();
              struct.user.read(iprot);
              struct.setUserIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // FOLLOWER_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.followerNumber = iprot.readI32();
              struct.setFollowerNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // FOLLOWING_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.followingNumber = iprot.readI32();
              struct.setFollowingNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // RATED_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.ratedNumber = iprot.readI32();
              struct.setRatedNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // IS_FOLLOWING
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isFollowing = iprot.readBool();
              struct.setIsFollowingIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // IS_FOLLOWED
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isFollowed = iprot.readBool();
              struct.setIsFollowedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // HIDE_PROFILE_TO_STRANGER
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.hideProfileToStranger = iprot.readBool();
              struct.setHideProfileToStrangerIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, MyProfile struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.user != null) {
        oprot.writeFieldBegin(USER_FIELD_DESC);
        struct.user.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(FOLLOWER_NUMBER_FIELD_DESC);
      oprot.writeI32(struct.followerNumber);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FOLLOWING_NUMBER_FIELD_DESC);
      oprot.writeI32(struct.followingNumber);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(RATED_NUMBER_FIELD_DESC);
      oprot.writeI32(struct.ratedNumber);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_FOLLOWING_FIELD_DESC);
      oprot.writeBool(struct.isFollowing);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_FOLLOWED_FIELD_DESC);
      oprot.writeBool(struct.isFollowed);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(HIDE_PROFILE_TO_STRANGER_FIELD_DESC);
      oprot.writeBool(struct.hideProfileToStranger);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class MyProfileTupleSchemeFactory implements SchemeFactory {
    public MyProfileTupleScheme getScheme() {
      return new MyProfileTupleScheme();
    }
  }

  private static class MyProfileTupleScheme extends TupleScheme<MyProfile> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, MyProfile struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetUser()) {
        optionals.set(0);
      }
      if (struct.isSetFollowerNumber()) {
        optionals.set(1);
      }
      if (struct.isSetFollowingNumber()) {
        optionals.set(2);
      }
      if (struct.isSetRatedNumber()) {
        optionals.set(3);
      }
      if (struct.isSetIsFollowing()) {
        optionals.set(4);
      }
      if (struct.isSetIsFollowed()) {
        optionals.set(5);
      }
      if (struct.isSetHideProfileToStranger()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetUser()) {
        struct.user.write(oprot);
      }
      if (struct.isSetFollowerNumber()) {
        oprot.writeI32(struct.followerNumber);
      }
      if (struct.isSetFollowingNumber()) {
        oprot.writeI32(struct.followingNumber);
      }
      if (struct.isSetRatedNumber()) {
        oprot.writeI32(struct.ratedNumber);
      }
      if (struct.isSetIsFollowing()) {
        oprot.writeBool(struct.isFollowing);
      }
      if (struct.isSetIsFollowed()) {
        oprot.writeBool(struct.isFollowed);
      }
      if (struct.isSetHideProfileToStranger()) {
        oprot.writeBool(struct.hideProfileToStranger);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, MyProfile struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.user = new User();
        struct.user.read(iprot);
        struct.setUserIsSet(true);
      }
      if (incoming.get(1)) {
        struct.followerNumber = iprot.readI32();
        struct.setFollowerNumberIsSet(true);
      }
      if (incoming.get(2)) {
        struct.followingNumber = iprot.readI32();
        struct.setFollowingNumberIsSet(true);
      }
      if (incoming.get(3)) {
        struct.ratedNumber = iprot.readI32();
        struct.setRatedNumberIsSet(true);
      }
      if (incoming.get(4)) {
        struct.isFollowing = iprot.readBool();
        struct.setIsFollowingIsSet(true);
      }
      if (incoming.get(5)) {
        struct.isFollowed = iprot.readBool();
        struct.setIsFollowedIsSet(true);
      }
      if (incoming.get(6)) {
        struct.hideProfileToStranger = iprot.readBool();
        struct.setHideProfileToStrangerIsSet(true);
      }
    }
  }

}

